server {
    listen 80;
    server_name comic.amertech.online;

    root /var/www/comic.amertech.online;
    index index.html index.php;

    # Security headers
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;

    # Logging configuration
    access_log /var/log/nginx/comic.amertech.online.access.log combined buffer=512k flush=1m;
    error_log /var/log/nginx/comic.amertech.online.error.log warn;

    # API endpoints with CORS
    location /api/ {
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    # JavaScript module handling
    location ~* \.(js|mjs)$ {
        default_type application/javascript;
        add_header Cache-Control "no-cache, must-revalidate" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;
        try_files $uri =404;
    }

    # Compression for better performance
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml application/json application/javascript text/javascript;

    # Add this location block to serve temporary files
    location /temp/ {
        alias /var/www/comic.amertech.online/public/temp/;
        try_files $uri $uri/ =404;
        
        # Add CORS headers for image access
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
        add_header 'Content-Type' 'image/png';
        expires 0;
        add_header Cache-Control "public, no-cache, must-revalidate";
        
        # Add debug headers
        add_header X-Debug-Path $request_filename always;
        add_header X-Debug-Uri $uri always;
    }

    # Add this location block to serve generated images
    location /generated/ {
        alias /var/www/comic.amertech.online/public/generated/;
        try_files $uri $uri/ =404;
        
        # Add CORS headers for image access
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
        add_header 'Content-Type' 'image/png';
        expires 0;
        add_header Cache-Control "public, no-cache, must-revalidate";
    }

    # Main location block
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # PHP handling
    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/run/php/php8.4-fpm.sock;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
    }

    # Security blocks
    location ~ /\.ht {
        deny all;
    }

    location ~ /\.env {
        deny all;
    }

    location ~ /\.git {
        deny all;
        return 403;
    }

    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /500.html;
} 